<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd">
<!-- spring的配置文件，这里主要配置业务逻辑相关. 数据源，事物控制    -->

<!--    1，扫描包,除了controller控制器 都扫描-->
    <context:component-scan base-package="com.th">
        <context:exclude-filter type="annotation"  expression="org.springframework.stereotype.Controller"  />
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>
    <context:component-scan base-package="com.th.dao"/>
<!--    2，配置数据源-->
    <context:property-placeholder location="classpath:dbConfig.properties"></context:property-placeholder>
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.jdbcDriverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

<!--    3，配置和mybatis的整合-->
<!--    <bean  id="sqlSessionFactoryBean"  class="org.mybatis.spring.SqlSessionFactoryBean">   配置mybatis-plus -->
    <bean  id="sqlSessionFactoryBean"  class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
<!--        指定mybatis全局配置文件xml的位置-->
<!--        花了一个晚上排错，这里必须 classpath-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
<!--&lt;!&ndash;        指定mybatis-mapper 文件具体实现的位置&ndash;&gt;-->
<!--        <property name="mapperLocations" value="classpath:com/th/dao/mapper/*.xml"></property>-->
        <property name="mapperLocations" value="classpath:com/th/dao/mapper/*.xml"></property>
        <property name="globalConfig" ref="globalConfig"></property>
    </bean>

<!--    4,配置扫描器，将mybatis接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--        扫描所有dao接口的实现，加入到ioc容器中-->
        <property name="basePackage" value="com/th/dao"></property>
    </bean>
    <bean id="globalConfig" class="com.baomidou.mybatisplus.core.config.GlobalConfig" >

    </bean>

<!--    5,事务控制的配置-->
<!--    -->
    <bean  id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--    控制住数据源-->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>

<!--    使用xml配置形式的事务,开启基于注解的事物，（必要主要的 都是使用配置式）-->
    <aop:config>
<!--        切入点表达式-->
        <aop:pointcut id="txPoint" expression="execution( * com.th.service..*(..)  )"/>
<!--        配置事务增强-->
        <aop:advisor pointcut-ref="txPoint" advice-ref="txAdvice" ></aop:advisor>
    </aop:config>

<!--    配置事物增强，事务如何切入-->
    <tx:advice  id="txAdvice">
        <tx:attributes>
<!--            所有方法都是事务方法-->
            <tx:method name="*"/>
<!--            以get开头的所有方法都只能读-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>






</beans>